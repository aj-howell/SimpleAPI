{"ast":null,"code":"var _class;\nimport { JwtHelper } from 'angular2-jwt'; // Import JwtHelper from 'angular2-jwt'\nimport * as i0 from \"@angular/core\";\nexport class AccessGuardService {\n  constructor() {}\n  canActivate(route, state) {\n    const jwt = localStorage.getItem(\"token\");\n    if (jwt != null) {\n      const jwthelper = new JwtHelper();\n      jwthelper;\n    }\n    return false;\n  }\n}\n_class = AccessGuardService;\n_class.ɵfac = function AccessGuardService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["JwtHelper","AccessGuardService","constructor","canActivate","route","state","jwt","localStorage","getItem","jwthelper","factory","ɵfac","providedIn"],"sources":["C:\\Users\\anazj\\OneDrive\\Desktop\\simpleapi\\frontend\\angular\\src\\app\\services\\guard\\access-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtHelper } from 'angular2-jwt'; // Import JwtHelper from 'angular2-jwt'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessGuardService implements CanActivate{\n  \n  constructor() { }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> \n    {\n      const jwt: string | null =localStorage.getItem(\"token\");\n      if(jwt != null)\n      {\n        const jwthelper = new JwtHelper();\n        jwthelper\n      }\n\n      return false;\n    }\n}\n"],"mappings":";AAGA,SAASA,SAAS,QAAQ,cAAc,CAAC,CAAC;;AAK1C,OAAM,MAAOC,kBAAkB;EAE7BC,YAAA,GAAgB;EAEhBC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,MAAMC,GAAG,GAAiBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACvD,IAAGF,GAAG,IAAI,IAAI,EACd;MACE,MAAMG,SAAS,GAAG,IAAIT,SAAS,EAAE;MACjCS,SAAS;;IAGX,OAAO,KAAK;EACd;;SAhBSR,kBAAkB;;mBAAlBA,MAAkB;AAAA;;SAAlBA,MAAkB;EAAAS,OAAA,EAAlBT,MAAkB,CAAAU,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}