{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let CustomerComponent = class CustomerComponent {\n  constructor(customerService, messageService) {\n    this.customerService = customerService;\n    this.messageService = messageService;\n    this.isVisible = false;\n    this.isVisible2 = false;\n    this.customer = {};\n    this.customers = [];\n    this.customerId = 0;\n  }\n  ngOnInit() {\n    this.getCustomers();\n  }\n  getCustomers() {\n    this.customerService.getCustomers().subscribe({\n      next: data => {\n        this.customers = data;\n        console.log(this.customers);\n      }\n    });\n  }\n  showSuccess(msg) {\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: msg\n    });\n  }\n  showError(msg) {\n    this.messageService.add({\n      severity: 'error',\n      summary: 'Error',\n      detail: msg\n    });\n  }\n  saveCustomer(request) {\n    this.customerService.saveCustomer(request).subscribe({\n      //use next if you want to do something after the request was made or need data from request\n      next: () => {\n        this.getCustomers();\n        this.isVisible = false;\n        this.showSuccess(\"Customer: \" + this.customer.name + \" has been saved\");\n        this.customer = {};\n      },\n      error: err => {\n        this.showError(\"Customer has not been saved\");\n      }\n    });\n  }\n  deleteCustomer(id) {\n    if (id) {\n      this.customerService.deleteCustomer(id).subscribe({\n        next: () => {\n          this.getCustomers();\n        }\n      });\n    }\n  }\n  updateCustomer(customer) {\n    this.customer = customer;\n  }\n};\n__decorate([Input()], CustomerComponent.prototype, \"customerId\", void 0);\nCustomerComponent = __decorate([Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})], CustomerComponent);","map":{"version":3,"names":["Component","Input","CustomerComponent","constructor","customerService","messageService","isVisible","isVisible2","customer","customers","customerId","ngOnInit","getCustomers","subscribe","next","data","console","log","showSuccess","msg","add","severity","summary","detail","showError","saveCustomer","request","name","error","err","deleteCustomer","id","updateCustomer","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\anazj\\OneDrive\\Desktop\\simpleapi\\frontend\\angular\\src\\app\\components\\customer\\customer.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport CustomerDTO from './CustomerDTO';\nimport { CustomerService } from 'src/app/services/customer/customer.service';\nimport CustomerRegistrationRequest from 'src/app/models/CustomerRegistrationRequest';\nimport { MessageService } from 'primeng/api';\nimport CustomerUpdateRequest from 'src/app/models/CustomerUpdateRequest';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n\n  isVisible: boolean = false;\n  isVisible2: boolean = false;\n\n  customer: CustomerRegistrationRequest = {};\n\n  customers: Array<CustomerDTO> = [];\n\n  @Input()\n  private customerId: number=0;\n\n  constructor(private customerService: CustomerService, private messageService: MessageService){};\n\n  ngOnInit(): void {\n    this.getCustomers();\n  }\n\n  private getCustomers(): void {\n      this.customerService.getCustomers()\n        .subscribe(\n          {\n            next: (data: CustomerDTO[])=>\n            {\n              \n              this.customers=data;\n              console.log(this.customers);\n            }\n          })\n  }\n\n  private showSuccess(msg: string) \n  {\n    this.messageService.add({ severity: 'success', summary: 'Success', detail: msg });\n  }\n\n  private showError(msg: string) \n  {\n    this.messageService.add({ severity: 'error', summary: 'Error', detail: msg });\n  }\n\n  saveCustomer(request: CustomerRegistrationRequest): void\n  {\n    this.customerService.saveCustomer(request)\n    .subscribe({\n      //use next if you want to do something after the request was made or need data from request\n      next: ()=>\n      {\n        this.getCustomers();\n        this.isVisible=false;\n        this.showSuccess(\"Customer: \"+this.customer.name+\" has been saved\");\n        this.customer={};\n        \n\n      },\n\n      error:(err)=>\n      {\n        this.showError(\"Customer has not been saved\")\n      }\n    })\n\n  }\n\n  deleteCustomer(id: number):void\n  {\n    if(id)\n    {\n      this.customerService.deleteCustomer(id)\n      .subscribe({\n          next: ()=>\n          {\n            this.getCustomers();\n          }\n      });\n\n    }\n  }\n\n  updateCustomer(customer:CustomerDTO):void\n  {\n\n      this.customer=customer;\n  }\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAajD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAY5BC,YAAoBC,eAAgC,EAAUC,cAA8B;IAAxE,KAAAD,eAAe,GAAfA,eAAe;IAA2B,KAAAC,cAAc,GAAdA,cAAc;IAV5E,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,UAAU,GAAY,KAAK;IAE3B,KAAAC,QAAQ,GAAgC,EAAE;IAE1C,KAAAC,SAAS,GAAuB,EAAE;IAG1B,KAAAC,UAAU,GAAS,CAAC;EAEkE;EAE9FC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEQA,YAAYA,CAAA;IAChB,IAAI,CAACR,eAAe,CAACQ,YAAY,EAAE,CAChCC,SAAS,CACR;MACEC,IAAI,EAAGC,IAAmB,IAAG;QAG3B,IAAI,CAACN,SAAS,GAACM,IAAI;QACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAAC;MAC7B;KACD,CAAC;EACV;EAEQS,WAAWA,CAACC,GAAW;IAE7B,IAAI,CAACd,cAAc,CAACe,GAAG,CAAC;MAAEC,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE,SAAS;MAAEC,MAAM,EAAEJ;IAAG,CAAE,CAAC;EACnF;EAEQK,SAASA,CAACL,GAAW;IAE3B,IAAI,CAACd,cAAc,CAACe,GAAG,CAAC;MAAEC,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAE,OAAO;MAAEC,MAAM,EAAEJ;IAAG,CAAE,CAAC;EAC/E;EAEAM,YAAYA,CAACC,OAAoC;IAE/C,IAAI,CAACtB,eAAe,CAACqB,YAAY,CAACC,OAAO,CAAC,CACzCb,SAAS,CAAC;MACT;MACAC,IAAI,EAAEA,CAAA,KAAI;QAER,IAAI,CAACF,YAAY,EAAE;QACnB,IAAI,CAACN,SAAS,GAAC,KAAK;QACpB,IAAI,CAACY,WAAW,CAAC,YAAY,GAAC,IAAI,CAACV,QAAQ,CAACmB,IAAI,GAAC,iBAAiB,CAAC;QACnE,IAAI,CAACnB,QAAQ,GAAC,EAAE;MAGlB,CAAC;MAEDoB,KAAK,EAAEC,GAAG,IAAG;QAEX,IAAI,CAACL,SAAS,CAAC,6BAA6B,CAAC;MAC/C;KACD,CAAC;EAEJ;EAEAM,cAAcA,CAACC,EAAU;IAEvB,IAAGA,EAAE,EACL;MACE,IAAI,CAAC3B,eAAe,CAAC0B,cAAc,CAACC,EAAE,CAAC,CACtClB,SAAS,CAAC;QACPC,IAAI,EAAEA,CAAA,KAAI;UAER,IAAI,CAACF,YAAY,EAAE;QACrB;OACH,CAAC;;EAGN;EAEAoB,cAAcA,CAACxB,QAAoB;IAG/B,IAAI,CAACA,QAAQ,GAACA,QAAQ;EAC1B;CAED;AA3ESyB,UAAA,EADPhC,KAAK,EAAE,C,oDACqB;AAVlBC,iBAAiB,GAAA+B,UAAA,EAL7BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWlC,iBAAiB,CAqF7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}