{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.auth_url = `${environment.api.base_url}/${environment.api.customer_url}`;\n    this.customers = [];\n  }\n  getCustomers() {\n    let jwtToken = localStorage.getItem(\"token\");\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + jwtToken);\n    return this.http.get(\"http://localhost:8085/api/v1/customers\", {\n      headers: headers\n    });\n  }\n}\n_class = CustomerService;\n_class.ɵfac = function CustomerService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","environment","CustomerService","constructor","http","auth_url","api","base_url","customer_url","customers","getCustomers","jwtToken","localStorage","getItem","headers","set","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\anazj\\OneDrive\\Desktop\\simpleapi\\frontend\\angular\\src\\app\\services\\customer\\customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport CustomerDTO from 'src/app/components/customer/CustomerDTO';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  private readonly auth_url = `${environment.api.base_url}/${environment.api.customer_url}`;\n  \n  constructor(private http: HttpClient) { }\n  \n  customers: Array<CustomerDTO>=[];\n\n  getCustomers():Observable<CustomerDTO[]> // we did not define the type within the request\n  {\n    let jwtToken =localStorage.getItem(\"token\");\n    let headers = new HttpHeaders();\n\n    headers=headers.set('Authorization', 'Bearer '+jwtToken);\n    \n\n    return this.http\n    .get<CustomerDTO[]>(\"http://localhost:8085/api/v1/customers\", {headers: headers})\n\n  }\n\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,QAAQ,GAAG,GAAGJ,WAAW,CAACK,GAAG,CAACC,QAAQ,IAAIN,WAAW,CAACK,GAAG,CAACE,YAAY,EAAE;IAIzF,KAAAC,SAAS,GAAqB,EAAE;EAFQ;EAIxCC,YAAYA,CAAA;IAEV,IAAIC,QAAQ,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIC,OAAO,GAAG,IAAId,WAAW,EAAE;IAE/Bc,OAAO,GAACA,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAACJ,QAAQ,CAAC;IAGxD,OAAO,IAAI,CAACP,IAAI,CACfY,GAAG,CAAgB,wCAAwC,EAAE;MAACF,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEnF;;SAnBWZ,eAAe;;mBAAfA,MAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAflB,MAAe;EAAAmB,OAAA,EAAfnB,MAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}