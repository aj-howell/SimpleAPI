{"ast":null,"code":"var _class;\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nexport class AccessGuardService {\n  constructor() {}\n  canActivate(route, state) {\n    const jwtToken = localStorage.getItem(\"token\");\n    if (jwtToken != null) {\n      const jwthelper = new JwtHelperService();\n      isTokenExpired: Boolean = jwthelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n}\n_class = AccessGuardService;\n_class.ɵfac = function AccessGuardService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["JwtHelperService","AccessGuardService","constructor","canActivate","route","state","jwtToken","localStorage","getItem","jwthelper","isTokenExpired","Boolean","factory","ɵfac","providedIn"],"sources":["C:\\Users\\anazj\\OneDrive\\Desktop\\simpleapi\\frontend\\angular\\src\\app\\services\\guard\\access-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Token } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessGuardService implements CanActivate{\n  \n  constructor() { }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> \n    {\n      const jwtToken: string | null =localStorage.getItem(\"token\");\n      if(jwtToken != null)\n      {\n        const jwthelper = new JwtHelperService();\n        isTokenExpired: Boolean = jwthelper.isTokenExpired(jwtToken)\n      }\n\n      return false;\n    }\n}\n"],"mappings":";AAGA,SAASA,gBAAgB,QAAQ,oBAAoB;;AAMrD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAA,GAAgB;EAEhBC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,MAAMC,QAAQ,GAAiBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5D,IAAGF,QAAQ,IAAI,IAAI,EACnB;MACE,MAAMG,SAAS,GAAG,IAAIT,gBAAgB,EAAE;MACxCU,cAAc,EAAEC,OAAO,GAAGF,SAAS,CAACC,cAAc,CAACJ,QAAQ,CAAC;;IAG9D,OAAO,KAAK;EACd;;SAhBSL,kBAAkB;;mBAAlBA,MAAkB;AAAA;;SAAlBA,MAAkB;EAAAW,OAAA,EAAlBX,MAAkB,CAAAY,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}